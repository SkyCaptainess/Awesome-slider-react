{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react'; // import './main.css';\n\nimport { NavigationContext } from './navigationContext';\n\nvar Navigate = function Navigate(_ref) {\n  var children = _ref.children,\n      href = _ref.href,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? null : _ref$className,\n      extra = _objectWithoutProperties(_ref, [\"children\", \"href\", \"className\"]);\n\n  var _useContext = useContext(NavigationContext),\n      navigation = _useContext[0],\n      setNavigation = _useContext[1];\n\n  var handleClick = function handleClick(event) {\n    event.preventDefault();\n\n    if (navigation.navigating === false) {\n      setNavigation(_objectSpread({}, navigation, {\n        \"goto\": href.replace(/^\\//, '')\n      }));\n    }\n  };\n\n  return __jsx(\"a\", _extends({\n    className: className,\n    onClick: handleClick,\n    href: href\n  }, extra), children);\n};\n\nexport default Navigate;","map":null,"metadata":{},"sourceType":"module"}