{"ast":null,"code":"var _jsxFileName = \"/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/components/lettering.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport './main.css';\n\nvar Lettering = function Lettering(_ref) {\n  var _ref$text = _ref.text,\n      text = _ref$text === void 0 ? [] : _ref$text,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title;\n\n  var renderText = function renderText() {\n    return text && text.length ? text.map(function (line, index) {\n      return __jsx(\"p\", {\n        key: \"\".concat(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, line);\n    }) : null;\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, title), renderText());\n};\n\nexport default Lettering;","map":{"version":3,"sources":["/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/components/lettering.js"],"names":["React","Lettering","text","title","renderText","length","map","line","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA+B;AAAA,uBAA5BC,IAA4B;AAAA,MAA5BA,IAA4B,0BAArB,EAAqB;AAAA,wBAAjBC,KAAiB;AAAA,MAAjBA,KAAiB,2BAAT,EAAS;;AAC/C,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WAAOF,IAAI,IAAIA,IAAI,CAACG,MAAb,GACHH,IAAI,CAACI,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACxB,aAAO;AAAG,QAAA,GAAG,YAAKA,KAAL,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBD,IAArB,CAAP;AACD,KAFD,CADG,GAIH,IAJJ;AAKD,GAND;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CADF,EAEGC,UAAU,EAFb,CADF;AAMD,CAfD;;AAiBA,eAAeH,SAAf","sourcesContent":["import React from 'react';\nimport './main.css';\n\nconst Lettering = ({ text = [], title = '' }) => {\n  const renderText = () => {\n    return text && text.length\n      ? text.map((line, index) => {\n          return <p key={`${index}`}>{line}</p>;\n        })\n      : null;\n  };\n\n  return (\n    <div>\n      <h1>{title}</h1>\n      {renderText()}\n    </div>\n  );\n};\n\nexport default Lettering;\n"]},"metadata":{},"sourceType":"module"}