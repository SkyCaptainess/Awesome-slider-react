{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/components/navigate.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport './main.css';\nimport { NavigationContext } from './navigationContext';\n\nvar Navigate = function Navigate(_ref) {\n  var children = _ref.children,\n      href = _ref.href,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? null : _ref$className;\n\n  var _useContext = useContext(NavigationContext),\n      navigation = _useContext[0],\n      setNavigation = _useContext[1];\n\n  return __jsx(\"a\", {\n    className: className,\n    onClick: function onClick(event) {\n      event.preventDefault();\n      console.log(navigation);\n\n      if (navigation.navigating === false) {\n        console.log('SET NAVIGATING TO TRUE');\n        setNavigation(_objectSpread({}, navigation, {\n          \"goto\": href.replace(/^\\//, '')\n        }));\n      }\n    },\n    href: href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, children);\n};\n\nexport default Navigate;","map":{"version":3,"sources":["/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/components/navigate.js"],"names":["React","useContext","NavigationContext","Navigate","children","href","className","navigation","setNavigation","event","preventDefault","console","log","navigating","replace"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,YAAP;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0C;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,4BAAvBC,SAAuB;AAAA,MAAvBA,SAAuB,+BAAX,IAAW;;AAAA,oBACrBL,UAAU,CAACC,iBAAD,CADW;AAAA,MAClDK,UADkD;AAAA,MACtCC,aADsC;;AAGzD,SACE;AACE,IAAA,SAAS,EAAEF,SADb;AAEE,IAAA,OAAO,EAAE,iBAAAG,KAAK,EAAI;AAChBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;;AACA,UAAIA,UAAU,CAACM,UAAX,KAA0B,KAA9B,EAAqC;AACnCF,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAJ,QAAAA,aAAa,mBACRD,UADQ;AAEX,kBAAMF,IAAI,CAACS,OAAL,CAAa,KAAb,EAAoB,EAApB;AAFK,WAAb;AAID;AACF,KAZH;AAaE,IAAA,IAAI,EAAET,IAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeGD,QAfH,CADF;AAmBD,CAtBD;;AAwBA,eAAeD,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport './main.css';\nimport { NavigationContext } from './navigationContext';\n\nconst Navigate = ({ children, href, className = null }) => {\n  const [navigation, setNavigation] = useContext(NavigationContext);\n\n  return (\n    <a\n      className={className}\n      onClick={event => {\n        event.preventDefault();\n        console.log(navigation);\n        if (navigation.navigating === false) {\n          console.log('SET NAVIGATING TO TRUE');\n          setNavigation({\n            ...navigation,\n            goto: href.replace(/^\\//, ''),\n          });\n        }\n      }}\n      href={href}\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default Navigate;\n"]},"metadata":{},"sourceType":"module"}