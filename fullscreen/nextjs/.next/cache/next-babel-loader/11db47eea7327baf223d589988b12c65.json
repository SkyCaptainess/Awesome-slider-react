{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/slider/slider.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport { NavigationContext } from '../components/navigationContext';\nimport { media } from './config.js';\n\nvar Slide = function Slide() {\n  var _useContext = useContext(NavigationContext),\n      navigation = _useContext[0],\n      setNavigation = _useContext[1];\n\n  var handleTransitionStart = function handleTransitionStart() {\n    setNavigation(_objectSpread({}, navigation, {\n      slug: navigation[\"goto\"],\n      navigating: true\n    }));\n  };\n\n  var handleTransitionEnd = function handleTransitionEnd(element) {\n    var state = _objectSpread({}, navigation, {\n      navigating: false\n    });\n\n    if (element.currentMedia.slug !== navigation[\"goto\"]) {\n      state.slug = element.currentMedia.slug;\n      state[\"goto\"] = element.currentMedia.slug;\n    }\n\n    setNavigation(state);\n\n    if (true) {\n      window.history.pushState({}, '', \"/\".concat(element.currentMedia.slug));\n    }\n  };\n\n  var handleTransitionReject = function handleTransitionReject() {\n    setNavigation(_objectSpread({}, navigation, {\n      \"goto\": navigation.slug,\n      navigating: true\n    }));\n  };\n\n  return __jsx(AwesomeSlider, {\n    selected: navigation[\"goto\"],\n    className: \"awesome-slider\",\n    bullets: false,\n    fillParent: true,\n    media: media,\n    infinite: false,\n    onTransitionReject: handleTransitionReject,\n    onTransitionStart: handleTransitionStart,\n    onTransitionEnd: handleTransitionEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n};\n\nexport default Slide;","map":{"version":3,"sources":["/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/slider/slider.js"],"names":["React","useContext","AwesomeSlider","NavigationContext","media","Slide","navigation","setNavigation","handleTransitionStart","slug","navigating","handleTransitionEnd","element","state","currentMedia","window","history","pushState","handleTransitionReject"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAO,sCAAP;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,KAAT,QAAsB,aAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,oBACkBJ,UAAU,CAACE,iBAAD,CAD5B;AAAA,MACXG,UADW;AAAA,MACCC,aADD;;AAGlB,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCD,IAAAA,aAAa,mBACRD,UADQ;AAEXG,MAAAA,IAAI,EAAEH,UAAU,QAFL;AAGXI,MAAAA,UAAU,EAAE;AAHD,OAAb;AAKD,GAND;;AAQA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,OAAO,EAAI;AACrC,QAAMC,KAAK,qBACNP,UADM;AAETI,MAAAA,UAAU,EAAE;AAFH,MAAX;;AAKA,QAAIE,OAAO,CAACE,YAAR,CAAqBL,IAArB,KAA8BH,UAAU,QAA5C,EAAmD;AACjDO,MAAAA,KAAK,CAACJ,IAAN,GAAaG,OAAO,CAACE,YAAR,CAAqBL,IAAlC;AACAI,MAAAA,KAAK,QAAL,GAAaD,OAAO,CAACE,YAAR,CAAqBL,IAAlC;AACD;;AAEDF,IAAAA,aAAa,CAACM,KAAD,CAAb;;AAEA,cAAmC;AACjCE,MAAAA,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,EAA7B,aAAqCL,OAAO,CAACE,YAAR,CAAqBL,IAA1D;AACD;AACF,GAhBD;;AAkBA,MAAMS,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnCX,IAAAA,aAAa,mBACRD,UADQ;AAEX,cAAMA,UAAU,CAACG,IAFN;AAGXC,MAAAA,UAAU,EAAE;AAHD,OAAb;AAKD,GAND;;AAQA,SACE,MAAC,aAAD;AACE,IAAA,QAAQ,EAAEJ,UAAU,QADtB;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,OAAO,EAAE,KAHX;AAIE,IAAA,UAAU,MAJZ;AAKE,IAAA,KAAK,EAAEF,KALT;AAME,IAAA,QAAQ,EAAE,KANZ;AAOE,IAAA,kBAAkB,EAAEc,sBAPtB;AAQE,IAAA,iBAAiB,EAAEV,qBARrB;AASE,IAAA,eAAe,EAAEG,mBATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD,CAlDD;;AAoDA,eAAeN,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport { NavigationContext } from '../components/navigationContext';\nimport { media } from './config.js';\n\nconst Slide = () => {\n  const [navigation, setNavigation] = useContext(NavigationContext);\n\n  const handleTransitionStart = () => {\n    setNavigation({\n      ...navigation,\n      slug: navigation.goto,\n      navigating: true,\n    });\n  };\n\n  const handleTransitionEnd = element => {\n    const state = {\n      ...navigation,\n      navigating: false,\n    };\n\n    if (element.currentMedia.slug !== navigation.goto) {\n      state.slug = element.currentMedia.slug;\n      state.goto = element.currentMedia.slug;\n    }\n\n    setNavigation(state);\n\n    if (typeof window !== 'undefined') {\n      window.history.pushState({}, '', `/${element.currentMedia.slug}`);\n    }\n  };\n\n  const handleTransitionReject = () => {\n    setNavigation({\n      ...navigation,\n      goto: navigation.slug,\n      navigating: true,\n    });\n  };\n\n  return (\n    <AwesomeSlider\n      selected={navigation.goto}\n      className=\"awesome-slider\"\n      bullets={false}\n      fillParent\n      media={media}\n      infinite={false}\n      onTransitionReject={handleTransitionReject}\n      onTransitionStart={handleTransitionStart}\n      onTransitionEnd={handleTransitionEnd}\n    />\n  );\n};\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}