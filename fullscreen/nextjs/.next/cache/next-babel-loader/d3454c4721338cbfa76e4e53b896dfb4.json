{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/components/slider/navigate.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect } from 'react';\nimport { NavigationContext } from './context';\nexport var NavLink = function NavLink(_ref) {\n  var children = _ref.children,\n      href = _ref.href,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? null : _ref$className,\n      extra = _objectWithoutProperties(_ref, [\"children\", \"href\", \"className\"]);\n\n  var _useContext = useContext(NavigationContext),\n      navigation = _useContext[0],\n      setNavigation = _useContext[1];\n\n  var handleClick = function handleClick(event) {\n    event.preventDefault();\n\n    if (navigation.navigating === false) {\n      setNavigation(_objectSpread({}, navigation, {\n        \"goto\": href.replace(/^\\//, '')\n      }));\n    }\n  };\n\n  return __jsx(\"a\", _extends({\n    className: className,\n    onClick: handleClick,\n    href: href\n  }, extra, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), children);\n};\nexport var Navigate = function Navigate(_ref2) {\n  var slug = _ref2.slug;\n\n  var _useContext2 = useContext(NavigationContext),\n      navigation = _useContext2[0],\n      setNavigation = _useContext2[1];\n\n  useEffect(function () {\n    setNavigation(_objectSpread({}, navigation, {\n      \"goto\": slug\n    }));\n  }, []);\n  return null;\n};","map":{"version":3,"sources":["/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/components/slider/navigate.js"],"names":["React","useContext","useEffect","NavigationContext","NavLink","children","href","className","extra","navigation","setNavigation","handleClick","event","preventDefault","navigating","replace","Navigate","slug"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,iBAAT,QAAkC,WAAlC;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAoD;AAAA,MAAjDC,QAAiD,QAAjDA,QAAiD;AAAA,MAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,4BAAjCC,SAAiC;AAAA,MAAjCA,SAAiC,+BAArB,IAAqB;AAAA,MAAZC,KAAY;;AAAA,oBACrCP,UAAU,CAACE,iBAAD,CAD2B;AAAA,MAClEM,UADkE;AAAA,MACtDC,aADsD;;AAGzE,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,UAAU,CAACK,UAAX,KAA0B,KAA9B,EAAqC;AACnCJ,MAAAA,aAAa,mBACRD,UADQ;AAEX,gBAAMH,IAAI,CAACS,OAAL,CAAa,KAAb,EAAoB,EAApB;AAFK,SAAb;AAID;AACF,GARD;;AAUA,SACE;AAAG,IAAA,SAAS,EAAER,SAAd;AAAyB,IAAA,OAAO,EAAEI,WAAlC;AAA+C,IAAA,IAAI,EAAEL;AAArD,KAA+DE,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGH,QADH,CADF;AAKD,CAlBM;AAoBP,OAAO,IAAMW,QAAQ,GAAG,SAAXA,QAAW,QAAc;AAAA,MAAXC,IAAW,SAAXA,IAAW;;AAAA,qBACAhB,UAAU,CAACE,iBAAD,CADV;AAAA,MAC7BM,UAD6B;AAAA,MACjBC,aADiB;;AAGpCR,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,aAAa,mBACRD,UADQ;AAEX,cAAMQ;AAFK,OAAb;AAID,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,IAAP;AACD,CAXM","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { NavigationContext } from './context';\n\nexport const NavLink = ({ children, href, className = null, ...extra }) => {\n  const [navigation, setNavigation] = useContext(NavigationContext);\n\n  const handleClick = event => {\n    event.preventDefault();\n    if (navigation.navigating === false) {\n      setNavigation({\n        ...navigation,\n        goto: href.replace(/^\\//, ''),\n      });\n    }\n  };\n\n  return (\n    <a className={className} onClick={handleClick} href={href} {...extra}>\n      {children}\n    </a>\n  );\n};\n\nexport const Navigate = ({ slug }) => {\n  const [navigation, setNavigation] = useContext(NavigationContext);\n\n  useEffect(() => {\n    setNavigation({\n      ...navigation,\n      goto: slug,\n    });\n  }, []);\n\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}