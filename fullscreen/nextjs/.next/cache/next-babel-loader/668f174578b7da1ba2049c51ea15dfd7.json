{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/custom-animations/fold-out-animation.css';\nimport { NavigationContext } from './navigationContext';\nimport { media } from './config.js';\n\nconst Slider = () => {\n  const {\n    0: navigation,\n    1: setNavigation\n  } = useContext(NavigationContext);\n\n  const handleTransitionStart = () => {\n    setNavigation(_objectSpread({}, navigation, {\n      slug: navigation.goto,\n      navigating: true\n    }));\n  };\n\n  const handleTransitionEnd = element => {\n    if (false) {\n      window.history.pushState({}, '', `/${element.currentMedia.slug}`);\n    }\n\n    const state = _objectSpread({}, navigation, {\n      navigating: false\n    });\n\n    if (element.currentMedia.slug !== state.goto) {\n      state.slug = element.currentMedia.slug;\n      state.goto = element.currentMedia.slug;\n    }\n\n    setNavigation(state);\n  };\n\n  const handleTransitionReject = element => {\n    if (navigation.navigating === true) {\n      return;\n    }\n\n    setNavigation({\n      slug: element.currentMedia.slug,\n      goto: element.currentMedia.slug,\n      navigating: false\n    });\n  };\n\n  return __jsx(AwesomeSlider, {\n    selected: navigation.goto,\n    className: \"awesome-slider\",\n    bullets: false,\n    buttons: false,\n    fillParent: true,\n    media: media,\n    infinite: false,\n    onTransitionReject: handleTransitionReject,\n    onTransitionStart: handleTransitionStart,\n    onTransitionEnd: handleTransitionEnd\n  });\n};\n\nexport default Slider;","map":null,"metadata":{},"sourceType":"module"}