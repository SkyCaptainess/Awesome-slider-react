{"ast":null,"code":"var _jsxFileName = \"/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/components/select/select.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport './select.scss';\n\nconst Select = ({\n  options = [],\n  onChange,\n  selected\n}) => {\n  const renderOptions = () => {\n    return options.map(({\n      value,\n      label\n    }) => {\n      return __jsx(\"option\", {\n        selected: value === selected,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, label);\n    });\n  };\n\n  return __jsx(\"select\", {\n    onChange: event => {\n      onChange(event.currentTarget.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, renderOptions());\n};\n\nexport default Select;","map":{"version":3,"sources":["/Users/rcaferati/Projects/github/react-awesome-slider/fullscreen/nextjs/components/select/select.js"],"names":["React","Select","options","onChange","selected","renderOptions","map","value","label","event","currentTarget"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAO,GAAG,EAAZ;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA;AAA1B,CAAD,KAA0C;AACvD,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAOH,OAAO,CAACI,GAAR,CAAY,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAsB;AACvC,aACE;AAAQ,QAAA,QAAQ,EAAED,KAAK,KAAKH,QAA5B;AAAsC,QAAA,KAAK,EAAEG,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,KADH,CADF;AAKD,KANM,CAAP;AAOD,GARD;;AAUA,SACE;AACE,IAAA,QAAQ,EAAEC,KAAK,IAAI;AACjBN,MAAAA,QAAQ,CAACM,KAAK,CAACC,aAAN,CAAoBH,KAArB,CAAR;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,aAAa,EALhB,CADF;AASD,CApBD;;AAsBA,eAAeJ,MAAf","sourcesContent":["import React from 'react';\nimport './select.scss';\n\nconst Select = ({ options = [], onChange, selected }) => {\n  const renderOptions = () => {\n    return options.map(({ value, label }) => {\n      return (\n        <option selected={value === selected} value={value}>\n          {label}\n        </option>\n      );\n    });\n  };\n\n  return (\n    <select\n      onChange={event => {\n        onChange(event.currentTarget.value);\n      }}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}